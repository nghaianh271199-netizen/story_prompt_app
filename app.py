import streamlit as st
import google.generativeai as genai

# ==============================
# C·∫•u h√¨nh Gemini API
# ==============================
genai.configure(api_key=st.secrets["GEMINI_API_KEY"])

# Kh·ªüi t·∫°o model Gemini
model = genai.GenerativeModel("gemini-1.5-flash")

# ==============================
# Giao di·ªán Streamlit
# ==============================
st.set_page_config(page_title="Story Prompt App", page_icon="‚ú®")
st.title("‚ú® ·ª®ng d·ª•ng sinh Prompt v·ªõi Gemini")

# Nh·∫≠p n·ªôi dung
text_input = st.text_area("‚úçÔ∏è Nh·∫≠p n·ªôi dung truy·ªán ho·∫∑c ƒëo·∫°n vƒÉn:")

# X·ª≠ l√Ω khi b·∫•m n√∫t
if st.button("üöÄ Ph√¢n t√≠ch v√† sinh Prompt"):
    if not text_input.strip():
        st.warning("‚ö†Ô∏è Vui l√≤ng nh·∫≠p n·ªôi dung tr∆∞·ªõc khi ch·∫°y.")
    else:
        with st.spinner("‚è≥ ƒêang ph√¢n t√≠ch v√† t·∫°o prompt..."):
            try:
                prompt = f"""
                B·∫°n l√† c√¥ng c·ª• chuy√™n ph√¢n t√≠ch vƒÉn b·∫£n ƒë·ªÉ sinh prompt.
                H√£y ph√¢n t√≠ch ƒëo·∫°n vƒÉn sau v√† xu·∫•t ra **JSON h·ª£p l·ªá** v·ªõi c·∫•u tr√∫c:
                {{
                  "summary": "T√≥m t·∫Øt ng·∫Øn g·ªçn",
                  "characters": ["nh√¢n v·∫≠t 1", "nh√¢n v·∫≠t 2"],
                  "prompts": ["prompt g·ª£i √Ω 1", "prompt g·ª£i √Ω 2"]
                }}

                VƒÉn b·∫£n: {text_input}
                """

                response = model.generate_content(prompt)

                # Hi·ªÉn th·ªã k·∫øt qu·∫£
                st.subheader("üìå K·∫øt qu·∫£ JSON:")
                st.json(response.text)

            except Exception as e:
                st.error(f"‚ùå L·ªói: {e}")
